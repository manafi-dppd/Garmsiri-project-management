generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.sqlite"
}

model Menu {
  id          Int           @id @default(autoincrement())
  title       String
  title_fa    String
  active      Boolean
  general     Boolean
  slug        String         @unique
  parentId    Int?           // برای منوهای اصلی مقدار null است
  parent      Menu?          @relation("ParentChild", fields: [parentId], references: [id])
  children    Menu[]         @relation("ParentChild") // نیازی به fields و references نیست
  AccessLevel AccessLevel[]
}



model Position {
  id           Int           @id @default(autoincrement())
  title        String
  title_fa     String
  req_license  Boolean  @default(false)
  accessLevels AccessLevel[]
}

model AccessLevel {
  id         Int      @id @default(autoincrement())
  positionId Int
  menuId     Int
  hasAccess  Boolean  @default(false) // مقدار true یا false
  position   Position @relation(fields: [positionId], references: [id])
  menu       Menu     @relation(fields: [menuId], references: [id])
}

model Invitation {
  id                     Int                 @id @default(autoincrement())
  firstName              String?              // نام دعوت‌شده
  lastName               String
  mobile                 String       @unique
  expirationDate         DateTime?
  gender                 String?    // رابطه چند-به-چند با Position
  positions              PositionOnInvitation[]
  accessLevels           InvitationAccess[]     // ارتباط با جدول سطح دسترسی
  createdAt              DateTime            @default(now())
  inviterId              Int?         @relation(fields: [userId], references: [id])
  introdPathLetter       String?  
  letterIssuer           String?
  letterDate             String?
  isRegistered           Boolean  @default(false)
}

enum Gender {
  MALE
  FEMALE
}

model PositionOnInvitation {
  id            Int       @id @default(autoincrement())
  invitationId  Int       // شناسه دعوت‌شده
  positionId    Int       // شناسه نقش
  Invitation    Invitation @relation(fields: [invitationId], references: [id])
  Position      Position   @relation(fields: [positionId], references: [id])
}

model InvitationAccess {
  id            Int      @id @default(autoincrement())
  invitationId  Int      // شناسه دعوت‌شده
  menuId        Int      // شناسه منو
  hasAccess     Boolean  // سطح دسترسی
  Invitation    Invitation @relation(fields: [invitationId], references: [id])
  Menu          Menu       @relation(fields: [menuId], references: [id])
}


// model User {
//   id                         Int          @id @default(autoincrement())
//   first_name                 String
//   last_name                  String
//   mobile_phone               String       @unique
//   email                      String?      @unique
//   gender                     String
//   position                   String
//   inviterId                  Int?
//   invitation_time            DateTime
//   registration_time          DateTime
//   membership_expiration_date DateTime?
//   active                     Boolean
//   letter_file                Bytes?
//   letter_issuer              String?
//   letter_number              String?
//   letter_date                String?
//   letter_approver            String?
//   password                   String
//   accessLevel                AccessLevel?
//   Inviter                    User?        @relation("UserInvitations", fields: [inviterId], references: [id])
//   Inviters                   User[]       @relation("UserInvitations")
// }
